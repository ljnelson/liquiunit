#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// com.edugility.liquiunit.LiquiunitRule
	c73 [label=<<table title="com.edugility.liquiunit.LiquiunitRule" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./LiquiunitRule.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> LiquiunitRule </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # logger : Logger </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + LiquiunitRule(dataSource : DataSource, contexts : String[]) </td></tr>
<tr><td align="left" balign="left"> + getChangeLogResourceName() : String </td></tr>
<tr><td align="left" balign="left"> + setChangeLogResourceName(name : String) </td></tr>
<tr><td align="left" balign="left"> + getContexts() : Iterable&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + setContexts(contexts : Iterable&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> # before() </td></tr>
<tr><td align="left" balign="left"> # createLiquibase(database : Database) : Liquibase </td></tr>
<tr><td align="left" balign="left"> # changeLogResourceExists() : boolean </td></tr>
<tr><td align="left" balign="left"> + getResourceAccessor() : ResourceAccessor </td></tr>
<tr><td align="left" balign="left"> + setResourceAccessor(resourceAccessor : ResourceAccessor) </td></tr>
<tr><td align="left" balign="left"> # shouldUpdate(liquibase : Liquibase) : boolean </td></tr>
<tr><td align="left" balign="left"> + newInstance() : TestRule </td></tr>
<tr><td align="left" balign="left"> + newInstance(changeLogResourceName : String, dataSource : DataSource, contexts : String[]) : TestRule </td></tr>
		</table></td></tr>
		</table>>, URL="./LiquiunitRule.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//com.edugility.liquiunit.LiquiunitRule extends org.junit.rules.ExternalResource
	c79:p -> c73:p [dir=back,arrowtail=empty];
	// com.edugility.liquiunit.LiquiunitRule NAVASSOC liquibase.logging.Logger
	c73:p -> c81:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.edugility.liquiunit.LiquiunitRule NAVASSOC liquibase.Liquibase
	c73:p -> c87:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.edugility.liquiunit.LiquiunitRule NAVASSOC liquibase.resource.ResourceAccessor
	c73:p -> c88:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// liquibase.resource.ResourceAccessor
	c88 [label=<<table title="liquibase.resource.ResourceAccessor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://www.liquibase.org/javadoc/liquibase/resource/ResourceAccessor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> liquibase.resource.ResourceAccessor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getResourcesAsStream(arg0 : java.lang.String) : java.util.Set&lt;java.io.InputStream&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + list(arg0 : java.lang.String, arg1 : java.lang.String, arg2 : boolean, arg3 : boolean, arg4 : boolean) : java.util.Set&lt;java.lang.String&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + toClassLoader() : java.lang.ClassLoader </font></td></tr>
		</table></td></tr>
		</table>>, URL="http://www.liquibase.org/javadoc/liquibase/resource/ResourceAccessor.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.junit.rules.ExternalResource
	c79 [label=<<table title="org.junit.rules.ExternalResource" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://junit.org/apidocs/org/junit/rules/ExternalResource.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> org.junit.rules.ExternalResource </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ExternalResource() </td></tr>
<tr><td align="left" balign="left"> + apply(arg0 : org.junit.runners.model.Statement, arg1 : org.junit.runner.Description) : org.junit.runners.model.Statement </td></tr>
<tr><td align="left" balign="left"> # before() </td></tr>
<tr><td align="left" balign="left"> # after() </td></tr>
		</table></td></tr>
		</table>>, URL="http://junit.org/apidocs/org/junit/rules/ExternalResource.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// liquibase.logging.Logger
	c81 [label=<<table title="liquibase.logging.Logger" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://www.liquibase.org/javadoc/liquibase/logging/Logger.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> liquibase.logging.Logger </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setName(arg0 : java.lang.String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setLogLevel(arg0 : java.lang.String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setLogLevel(arg0 : liquibase.logging.LogLevel) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setLogLevel(arg0 : java.lang.String, arg1 : java.lang.String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + severe(arg0 : java.lang.String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + severe(arg0 : java.lang.String, arg1 : java.lang.Throwable) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + warning(arg0 : java.lang.String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + warning(arg0 : java.lang.String, arg1 : java.lang.Throwable) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + info(arg0 : java.lang.String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + info(arg0 : java.lang.String, arg1 : java.lang.Throwable) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + debug(arg0 : java.lang.String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getLogLevel() : liquibase.logging.LogLevel </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + debug(arg0 : java.lang.String, arg1 : java.lang.Throwable) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setChangeLog(arg0 : liquibase.changelog.DatabaseChangeLog) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setChangeSet(arg0 : liquibase.changelog.ChangeSet) </font></td></tr>
		</table></td></tr>
		</table>>, URL="http://www.liquibase.org/javadoc/liquibase/logging/Logger.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// liquibase.Liquibase
	c87 [label=<<table title="liquibase.Liquibase" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://www.liquibase.org/javadoc/liquibase/Liquibase.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> liquibase.Liquibase </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # database : liquibase.database.Database </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Liquibase(arg0 : java.lang.String, arg1 : liquibase.resource.ResourceAccessor, arg2 : liquibase.database.DatabaseConnection) </td></tr>
<tr><td align="left" balign="left"> + Liquibase(arg0 : java.lang.String, arg1 : liquibase.resource.ResourceAccessor, arg2 : liquibase.database.Database) </td></tr>
<tr><td align="left" balign="left"> + Liquibase(arg0 : liquibase.changelog.DatabaseChangeLog, arg1 : liquibase.resource.ResourceAccessor, arg2 : liquibase.database.Database) </td></tr>
<tr><td align="left" balign="left"> + getChangeLogFile() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getLog() : liquibase.logging.Logger </td></tr>
<tr><td align="left" balign="left"> + getChangeLogParameters() : liquibase.changelog.ChangeLogParameters </td></tr>
<tr><td align="left" balign="left"> + getDatabase() : liquibase.database.Database </td></tr>
<tr><td align="left" balign="left"> + getFileOpener() : liquibase.resource.ResourceAccessor </td></tr>
<tr><td align="left" balign="left"> + getResourceAccessor() : liquibase.resource.ResourceAccessor </td></tr>
<tr><td align="left" balign="left"> + setCurrentDateTimeFunction(arg0 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + update(arg0 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + update(arg0 : liquibase.Contexts) </td></tr>
<tr><td align="left" balign="left"> + update(arg0 : liquibase.Contexts, arg1 : liquibase.LabelExpression) </td></tr>
<tr><td align="left" balign="left"> + getDatabaseChangeLog() : liquibase.changelog.DatabaseChangeLog </td></tr>
<tr><td align="left" balign="left"> # createUpdateVisitor() : liquibase.changelog.visitor.UpdateVisitor </td></tr>
<tr><td align="left" balign="left"> # getStandardChangelogIterator(arg0 : liquibase.Contexts, arg1 : liquibase.LabelExpression, arg2 : liquibase.changelog.DatabaseChangeLog) : liquibase.changelog.ChangeLogIterator </td></tr>
<tr><td align="left" balign="left"> + update(arg0 : java.lang.String, arg1 : java.io.Writer) </td></tr>
<tr><td align="left" balign="left"> + update(arg0 : liquibase.Contexts, arg1 : java.io.Writer) </td></tr>
<tr><td align="left" balign="left"> + update(arg0 : liquibase.Contexts, arg1 : liquibase.LabelExpression, arg2 : java.io.Writer) </td></tr>
<tr><td align="left" balign="left"> + update(arg0 : int, arg1 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + update(arg0 : int, arg1 : liquibase.Contexts, arg2 : liquibase.LabelExpression) </td></tr>
<tr><td align="left" balign="left"> + update(arg0 : int, arg1 : java.lang.String, arg2 : java.io.Writer) </td></tr>
<tr><td align="left" balign="left"> + update(arg0 : int, arg1 : liquibase.Contexts, arg2 : liquibase.LabelExpression, arg3 : java.io.Writer) </td></tr>
<tr><td align="left" balign="left"> + rollback(arg0 : int, arg1 : java.lang.String, arg2 : java.io.Writer) </td></tr>
<tr><td align="left" balign="left"> + rollback(arg0 : int, arg1 : liquibase.Contexts, arg2 : java.io.Writer) </td></tr>
<tr><td align="left" balign="left"> + rollback(arg0 : int, arg1 : liquibase.Contexts, arg2 : liquibase.LabelExpression, arg3 : java.io.Writer) </td></tr>
<tr><td align="left" balign="left"> + rollback(arg0 : int, arg1 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + rollback(arg0 : int, arg1 : liquibase.Contexts, arg2 : liquibase.LabelExpression) </td></tr>
<tr><td align="left" balign="left"> + rollback(arg0 : java.lang.String, arg1 : java.lang.String, arg2 : java.io.Writer) </td></tr>
<tr><td align="left" balign="left"> + rollback(arg0 : java.lang.String, arg1 : liquibase.Contexts, arg2 : java.io.Writer) </td></tr>
<tr><td align="left" balign="left"> + rollback(arg0 : java.lang.String, arg1 : liquibase.Contexts, arg2 : liquibase.LabelExpression, arg3 : java.io.Writer) </td></tr>
<tr><td align="left" balign="left"> + rollback(arg0 : java.lang.String, arg1 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + rollback(arg0 : java.lang.String, arg1 : liquibase.Contexts) </td></tr>
<tr><td align="left" balign="left"> + rollback(arg0 : java.lang.String, arg1 : liquibase.Contexts, arg2 : liquibase.LabelExpression) </td></tr>
<tr><td align="left" balign="left"> + rollback(arg0 : java.util.Date, arg1 : java.lang.String, arg2 : java.io.Writer) </td></tr>
<tr><td align="left" balign="left"> + rollback(arg0 : java.util.Date, arg1 : liquibase.Contexts, arg2 : liquibase.LabelExpression, arg3 : java.io.Writer) </td></tr>
<tr><td align="left" balign="left"> + rollback(arg0 : java.util.Date, arg1 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + rollback(arg0 : java.util.Date, arg1 : liquibase.Contexts, arg2 : liquibase.LabelExpression) </td></tr>
<tr><td align="left" balign="left"> + changeLogSync(arg0 : java.lang.String, arg1 : java.io.Writer) </td></tr>
<tr><td align="left" balign="left"> + changeLogSync(arg0 : liquibase.Contexts, arg1 : liquibase.LabelExpression, arg2 : java.io.Writer) </td></tr>
<tr><td align="left" balign="left"> + changeLogSync(arg0 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + changeLogSync(arg0 : liquibase.Contexts) </td></tr>
<tr><td align="left" balign="left"> + changeLogSync(arg0 : liquibase.Contexts, arg1 : liquibase.LabelExpression) </td></tr>
<tr><td align="left" balign="left"> + markNextChangeSetRan(arg0 : java.lang.String, arg1 : java.io.Writer) </td></tr>
<tr><td align="left" balign="left"> + markNextChangeSetRan(arg0 : liquibase.Contexts, arg1 : liquibase.LabelExpression, arg2 : java.io.Writer) </td></tr>
<tr><td align="left" balign="left"> + markNextChangeSetRan(arg0 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + markNextChangeSetRan(arg0 : liquibase.Contexts, arg1 : liquibase.LabelExpression) </td></tr>
<tr><td align="left" balign="left"> + futureRollbackSQL(arg0 : java.lang.String, arg1 : java.io.Writer) </td></tr>
<tr><td align="left" balign="left"> + futureRollbackSQL(arg0 : java.lang.Integer, arg1 : java.lang.String, arg2 : java.io.Writer) </td></tr>
<tr><td align="left" balign="left"> + futureRollbackSQL(arg0 : java.lang.Integer, arg1 : liquibase.Contexts, arg2 : liquibase.LabelExpression, arg3 : java.io.Writer) </td></tr>
<tr><td align="left" balign="left"> # resetServices() </td></tr>
<tr><td align="left" balign="left"> + dropAll() </td></tr>
<tr><td align="left" balign="left"> + dropAll(arg0 : liquibase.CatalogAndSchema[]) </td></tr>
<tr><td align="left" balign="left"> + tag(arg0 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + updateTestingRollback(arg0 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + updateTestingRollback(arg0 : liquibase.Contexts, arg1 : liquibase.LabelExpression) </td></tr>
<tr><td align="left" balign="left"> + checkLiquibaseTables(arg0 : boolean, arg1 : liquibase.changelog.DatabaseChangeLog, arg2 : liquibase.Contexts, arg3 : liquibase.LabelExpression) </td></tr>
<tr><td align="left" balign="left"> + isSafeToRunUpdate() : boolean </td></tr>
<tr><td align="left" balign="left"> + listLocks() : liquibase.lockservice.DatabaseChangeLogLock[] </td></tr>
<tr><td align="left" balign="left"> + reportLocks(arg0 : java.io.PrintStream) </td></tr>
<tr><td align="left" balign="left"> + forceReleaseLocks() </td></tr>
<tr><td align="left" balign="left"> + listUnrunChangeSets(arg0 : liquibase.Contexts) : java.util.List&lt;liquibase.changelog.ChangeSet&gt; </td></tr>
<tr><td align="left" balign="left"> + listUnrunChangeSets(arg0 : liquibase.Contexts, arg1 : liquibase.LabelExpression) : java.util.List&lt;liquibase.changelog.ChangeSet&gt; </td></tr>
<tr><td align="left" balign="left"> + getChangeSetStatuses(arg0 : liquibase.Contexts) : java.util.List&lt;liquibase.changelog.ChangeSetStatus&gt; </td></tr>
<tr><td align="left" balign="left"> + getChangeSetStatuses(arg0 : liquibase.Contexts, arg1 : liquibase.LabelExpression) : java.util.List&lt;liquibase.changelog.ChangeSetStatus&gt; </td></tr>
<tr><td align="left" balign="left"> + reportStatus(arg0 : boolean, arg1 : java.lang.String, arg2 : java.io.Writer) </td></tr>
<tr><td align="left" balign="left"> + reportStatus(arg0 : boolean, arg1 : liquibase.Contexts, arg2 : java.io.Writer) </td></tr>
<tr><td align="left" balign="left"> + reportStatus(arg0 : boolean, arg1 : liquibase.Contexts, arg2 : liquibase.LabelExpression, arg3 : java.io.Writer) </td></tr>
<tr><td align="left" balign="left"> + listUnexpectedChangeSets(arg0 : java.lang.String) : java.util.Collection&lt;liquibase.changelog.RanChangeSet&gt; </td></tr>
<tr><td align="left" balign="left"> + listUnexpectedChangeSets(arg0 : liquibase.Contexts, arg1 : liquibase.LabelExpression) : java.util.Collection&lt;liquibase.changelog.RanChangeSet&gt; </td></tr>
<tr><td align="left" balign="left"> + reportUnexpectedChangeSets(arg0 : boolean, arg1 : java.lang.String, arg2 : java.io.Writer) </td></tr>
<tr><td align="left" balign="left"> + reportUnexpectedChangeSets(arg0 : boolean, arg1 : liquibase.Contexts, arg2 : liquibase.LabelExpression, arg3 : java.io.Writer) </td></tr>
<tr><td align="left" balign="left"> + clearCheckSums() </td></tr>
<tr><td align="left" balign="left"> + calculateCheckSum(arg0 : java.lang.String) : liquibase.change.CheckSum </td></tr>
<tr><td align="left" balign="left"> + calculateCheckSum(arg0 : java.lang.String, arg1 : java.lang.String, arg2 : java.lang.String) : liquibase.change.CheckSum </td></tr>
<tr><td align="left" balign="left"> + generateDocumentation(arg0 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + generateDocumentation(arg0 : java.lang.String, arg1 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + generateDocumentation(arg0 : java.lang.String, arg1 : liquibase.Contexts, arg2 : liquibase.LabelExpression) </td></tr>
<tr><td align="left" balign="left"> + diff(arg0 : liquibase.database.Database, arg1 : liquibase.database.Database, arg2 : liquibase.diff.compare.CompareControl) : liquibase.diff.DiffResult </td></tr>
<tr><td align="left" balign="left"> + validate() </td></tr>
<tr><td align="left" balign="left"> + setChangeLogParameter(arg0 : java.lang.String, arg1 : java.lang.Object) </td></tr>
<tr><td align="left" balign="left"> + setChangeExecListener(arg0 : liquibase.changelog.visitor.ChangeExecListener) </td></tr>
<tr><td align="left" balign="left"> + setChangeLogSyncListener(arg0 : liquibase.changelog.visitor.ChangeLogSyncListener) </td></tr>
<tr><td align="left" balign="left"> + setIgnoreClasspathPrefix(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + isIgnoreClasspathPrefix() : boolean </td></tr>
<tr><td align="left" balign="left"> + generateChangeLog(arg0 : liquibase.CatalogAndSchema, arg1 : liquibase.diff.output.changelog.DiffToChangeLog, arg2 : java.io.PrintStream, arg3 : java.lang.Class&lt;?&gt;[]) </td></tr>
<tr><td align="left" balign="left"> + generateChangeLog(arg0 : liquibase.CatalogAndSchema, arg1 : liquibase.diff.output.changelog.DiffToChangeLog, arg2 : java.io.PrintStream, arg3 : liquibase.serializer.ChangeLogSerializer, arg4 : java.lang.Class&lt;?&gt;[]) </td></tr>
		</table></td></tr>
		</table>>, URL="http://www.liquibase.org/javadoc/liquibase/Liquibase.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

